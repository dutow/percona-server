# Ubuntu 14.04
dist: trusty
sudo: required
language: cpp

cache:
  ccache: true
  timeout: 600
  directories:
    - $HOME/.ccache
    - $TRAVIS_BUILD_DIR/deps     # cache Boost libraries

env:
  global:
    - CCACHE_DIR=$HOME/.ccache
    - CCACHE_COMPRESS=1
    - CCACHE_MAXSIZE=500Mi
    - CCACHE_CPP2=1
    - MAINTAINER_MODE=OFF

matrix:
  include:
    - compiler: gcc
      env: VERSION=7    BUILD=RelWithDebInfo
    - compiler: gcc
      env: VERSION=7    BUILD=Debug

script:
  - JOB_NUMBER=$(echo $TRAVIS_JOB_NUMBER | sed -e 's:[0-9][0-9]*\.\(.*\):\1:');
    echo -- JOB_NUMBER=$JOB_NUMBER PACKAGES=$PACKAGES TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG TRAVIS_BRANCH=$TRAVIS_BRANCH TRAVIS_EVENT_TYPE=$TRAVIS_EVENT_TYPE TRAVIS_PULL_REQUEST=$TRAVIS_PULL_REQUEST

  - echo -- Perform all Travis jobs or only jobs that are included in ENV_VAR_JOB_NUMBERS list if it is defined;
    JOB_NUMBERS="1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24";
    if [[ "$ENV_VAR_JOB_NUMBERS" != "" ]]; then
       JOB_NUMBERS=$ENV_VAR_JOB_NUMBERS;
    fi;
    JOB_ARRAY=(${JOB_NUMBERS// / });
    if [[ ! " ${JOB_ARRAY[@]} " =~ " ${JOB_NUMBER} " ]]; then
       echo Finishing as job ${JOB_NUMBER} is not on a list = $JOB_NUMBERS;
       travis_terminate 0; 
    fi;

  - echo -- Configure required LLVM and Ubuntu Toolchain repositories;
    if [[ "$TRAVIS_OS_NAME" == "linux" ]] && [[ "$CC" == "clang" ]]; then
       PACKAGES="llvm-$VERSION-dev $PACKAGES";
       curl -sSL "http://apt.llvm.org/llvm-snapshot.gpg.key" | sudo -E apt-key add -;
       echo "deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-$VERSION main" | sudo tee -a /etc/apt/sources.list > /dev/null;
       sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test;
    fi;
    if [[ "$TRAVIS_OS_NAME" == "linux" ]] && [[ "$CC" == "gcc" ]]; then
       sudo -E apt-add-repository -y "ppa:ubuntu-toolchain-r/test";
    fi;

  - echo -- Update list of packages and download dependencies;
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
       CC=$CC-$VERSION;
       CXX=$CXX-$VERSION;
       sudo -E apt-get -yq update >> ~/apt-get-update.log 2>&1;
       sudo -E apt-get -yq --no-install-suggests --no-install-recommends install $CXX $PACKAGES cmake cmake-curses-gui bison liblz4-dev liblz4-1 zlib1g-dev libncurses5-dev libedit-dev libaio-dev libssl-dev libevent-dev libmecab-dev libprotobuf-dev protobuf-compiler libicu-dev || travis_terminate 1;
       sudo ln -s $(which ccache) /usr/lib/ccache/$CC;
       sudo ln -s $(which ccache) /usr/lib/ccache/$CXX || echo;
    else
       brew update;
       brew install ccache;
       brew link ccache;
       export PATH="/usr/local/opt/ccache/libexec:$PATH";
    fi

  - mkdir bin; cd bin;
  - $CC -v
  - $CXX -v
  - ccache --version
  - ccache --print-config;
    ccache --zero-stats;

    cmake ..
      -DCMAKE_BUILD_TYPE=$BUILD
      -DMYSQL_MAINTAINER_MODE=$MAINTAINER_MODE
      -DBUILD_CONFIG=mysql_release
      -DFEATURE_SET=community
      -DENABLE_DTRACE=OFF
      -DENABLE_DOWNLOADS=1
      -DDOWNLOAD_BOOST=1
      -DWITH_BOOST=../deps
      -DWITH_ICU=system
      -DWITH_LIBEVENT=system
      -DWITH_EDITLINE=system
      -DWITH_SSL=system
      $CMAKE_OPT
      $ENV_VAR_CMAKE_OPT
  - make -j2
  - ccache --show-stats

